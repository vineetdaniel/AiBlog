{"version":3,"sources":["datepicker/datepicker.ts"],"names":[],"mappings":"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","file":"datepicker/datepicker.js","sourcesContent":["import {Component, Input, OnChanges, SimpleChanges, TemplateRef, forwardRef, OnInit} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, NavigationEvent} from './datepicker-view-model';\nimport {toInteger} from '../util/util';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * A lightweight and highly configurable datepicker directive\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  template: `\n    <template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\">\n       <div ngbDatepickerDayView [date]=\"date\" [currentMonth]=\"currentMonth\" [selected]=\"selected\" [disabled]=\"disabled\"></div>\n    </template>\n    \n    <table>\n      <tbody *ngIf=\"showNavigation\" ngbDatepickerNavigation\n        [date]=\"_date\"\n        [minDate]=\"_minDate\"\n        [maxDate]=\"_maxDate\"\n        [showWeekNumbers]=\"showWeekNumbers\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </tbody>\n      \n      <tbody ngbDatepickerMonthView\n        [month]=\"month\"\n        [selectedDate]=\"model\"\n        [dayTemplate]=\"dayTemplate || dt\"\n        [showWeekdays]=\"showWeekdays\"\n        [showWeekNumbers]=\"showWeekNumbers\"\n        (select)=\"onDateSelect($event)\">\n      </tbody>\n    </table>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbDatepicker implements OnChanges,\n    OnInit, ControlValueAccessor {\n  _date: NgbDate;\n  _maxDate: NgbDate;\n  _minDate: NgbDate;\n\n  model: NgbDate;\n  month: MonthViewModel;\n\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * First day of the week, 0=Sun, 1=Mon, etc.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Callback to mark a given date as disabled\n   */\n  @Input() markDisabled: (date: {year: number, month: number, day: number}) => boolean;\n\n  /**\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n   */\n  @Input() minDate: {year: number, month: number, day: number};\n\n  /**\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n   */\n  @Input() maxDate: {year: number, month: number, day: number};\n\n  /**\n   * Whether to display navigation or not\n   */\n  @Input() showNavigation: boolean;\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with. If nothing provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(private _service: NgbDatepickerService, private _calendar: NgbCalendar, config: NgbDatepickerConfig) {\n    this.dayTemplate = config.dayTemplate;\n    this.firstDayOfWeek = config.firstDayOfWeek;\n    this.markDisabled = config.markDisabled;\n    this.minDate = config.minDate;\n    this.maxDate = config.maxDate;\n    this.showNavigation = config.showNavigation;\n    this.showWeekdays = config.showWeekdays;\n    this.showWeekNumbers = config.showWeekNumbers;\n    this.startDate = config.startDate;\n  }\n\n  /**\n   * Navigates current view to provided date. If nothing provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    this._setViewWithinLimits(date ? NgbDate.from(date) : this._calendar.getToday());\n    this._updateData();\n  }\n\n  ngOnInit() {\n    this._setDates();\n    this.navigateTo(this.startDate);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._setDates();\n    this.navigateTo(this.startDate);\n  }\n\n  /**\n   * @internal\n   */\n  onDateSelect(date: NgbDate) {\n    this._setViewWithinLimits(date);\n\n    this.onTouched();\n    this.writeValue(date);\n    this.onChange({year: date.year, month: date.month, day: date.day});\n\n    // switch current month\n    if (this._date.month !== this.month.number) {\n      this._updateData();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  onNavigateDateSelect(date: NgbDate) {\n    this._setViewWithinLimits(date);\n    this._updateData();\n  }\n\n  /**\n   * @internal\n   */\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._setViewWithinLimits(this._calendar.getPrev(this._date, 'm'));\n        break;\n      case NavigationEvent.NEXT:\n        this._setViewWithinLimits(this._calendar.getNext(this._date, 'm'));\n        break;\n    }\n\n    this._updateData();\n  }\n\n  /**\n   * @internal\n   */\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  /**\n   * @internal\n   */\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  /**\n   * @internal\n   */\n  writeValue(value) { this.model = value ? new NgbDate(value.year, value.month, value.day) : null; }\n\n  private _setDates() {\n    this._maxDate = NgbDate.from(this.maxDate);\n    this._minDate = NgbDate.from(this.minDate);\n    this._date = this.startDate ? NgbDate.from(this.startDate) : this._calendar.getToday();\n\n    if (!this._minDate) {\n      this._minDate = this._calendar.getPrev(this._date, 'y', 10);\n    }\n\n    if (!this._maxDate) {\n      this._maxDate = this._calendar.getNext(this._date, 'y', 11);\n      this._maxDate = this._calendar.getPrev(this._maxDate);\n    }\n\n    if (this._minDate && this._maxDate && this._maxDate.before(this._minDate)) {\n      throw new Error(`'maxDate' ${this._maxDate} should be greater than 'minDate' ${this._minDate}`);\n    }\n  }\n\n  private _setViewWithinLimits(date: NgbDate) {\n    if (this._minDate && date.before(this._minDate)) {\n      this._date = new NgbDate(this._minDate.year, this._minDate.month, 1);\n    } else if (this._maxDate && date.after(this._maxDate)) {\n      this._date = new NgbDate(this._maxDate.year, this._maxDate.month, 1);\n    } else {\n      this._date = new NgbDate(date.year, date.month, 1);\n    }\n  }\n\n  private _updateData() {\n    this.month = this._service.generateMonthViewModel(\n        this._date, this._minDate, this._maxDate, toInteger(this.firstDayOfWeek), this.markDisabled);\n  }\n}\n"],"sourceRoot":"/source/"}