{"version":3,"sources":["modal/modal-container.ts"],"names":[],"mappings":"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","file":"modal/modal-container.js","sourcesContent":["import {\n  Directive,\n  Injector,\n  Renderer,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ComponentFactory,\n  ComponentRef\n} from '@angular/core';\n\nimport {isDefined} from '../util/util';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\nimport {NgbModalStack} from './modal-stack';\nimport {NgbModalRef} from './modal-ref';\n\nclass ModalContentContext {\n  close(result?: any) {}\n  dismiss(reason?: any) {}\n}\n\n@Directive({selector: 'template[ngbModalContainer]'})\nexport class NgbModalContainer {\n  private _backdropFactory: ComponentFactory<NgbModalBackdrop>;\n  private _windowFactory: ComponentFactory<NgbModalWindow>;\n\n  constructor(\n      private _injector: Injector, private _renderer: Renderer, private _viewContainerRef: ViewContainerRef,\n      componentFactoryResolver: ComponentFactoryResolver, ngbModalStack: NgbModalStack) {\n    this._backdropFactory = componentFactoryResolver.resolveComponentFactory(NgbModalBackdrop);\n    this._windowFactory = componentFactoryResolver.resolveComponentFactory(NgbModalWindow);\n\n    ngbModalStack.registerContainer(this);\n  }\n\n  open(content: string | TemplateRef<any>, options): NgbModalRef {\n    const modalContentContext = new ModalContentContext();\n    const nodes = this._getContentNodes(content, modalContentContext);\n    const windowCmptRef = this._viewContainerRef.createComponent(this._windowFactory, 0, this._injector, nodes);\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop>;\n    let ngbModalRef: NgbModalRef;\n\n    if (options.backdrop !== false) {\n      backdropCmptRef = this._viewContainerRef.createComponent(this._backdropFactory, 0, this._injector);\n    }\n    ngbModalRef = new NgbModalRef(this._viewContainerRef, windowCmptRef, backdropCmptRef);\n\n    modalContentContext.close = (result: any) => { ngbModalRef.close(result); };\n    modalContentContext.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n\n    return ngbModalRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    ['backdrop', 'keyboard', 'size'].forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentNodes(content: string | TemplateRef<any>, context: ModalContentContext): any[] {\n    if (!content) {\n      return [];\n    } else if (content instanceof TemplateRef) {\n      return [this._viewContainerRef.createEmbeddedView(<TemplateRef<ModalContentContext>>content, context).rootNodes];\n    } else {\n      return [[this._renderer.createText(null, `${content}`)]];\n    }\n  }\n}\n"],"sourceRoot":"/source/"}