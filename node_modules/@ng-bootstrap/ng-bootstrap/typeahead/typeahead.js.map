{"version":3,"sources":["typeahead/typeahead.ts"],"names":[],"mappings":"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","file":"typeahead/typeahead.js","sourcesContent":["import {\n  Directive,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  Injector,\n  Renderer,\n  ElementRef,\n  TemplateRef,\n  forwardRef,\n  AfterViewChecked,\n  OnDestroy\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable, Subject, Subscription} from 'rxjs/Rx';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/let';\nimport {Positioning} from '../util/positioning';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\nimport {PopupService} from '../util/popup';\nimport {toString} from '../util/util';\n\nenum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  ArrowUp = 38,\n  ArrowDown = 40\n}\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  host: {\n    '(blur)': 'onTouched()',\n    '[class.open]': 'isPopupOpen()',\n    '(document:click)': 'dismissPopup()',\n    '(input)': 'onChange($event.target.value)',\n    '(keydown)': 'handleKeyDown($event)',\n    'autocomplete': 'off',\n    'autocapitalize': 'off',\n    'autocorrect': 'off'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements OnInit,\n    AfterViewChecked, ControlValueAccessor, OnDestroy {\n  private _onChangeNoEmit: (_: any) => void;\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _positioning = new Positioning();\n  private _subscription: Subscription;\n  private _userInput: string;\n  private _valueChanges = new Subject<string>();\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n  @Input() inputFormatter: (value: any) => string;\n\n  /**\n   * A function to transform the provided observable text into the array of results\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * A function to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() resultFormatter: (value: any) => string;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n  @Input() showHint = false;\n\n  /**\n   * An event emitted when a match is selected. Event payload is equal to the selected item.\n   */\n  @Output() selectItem = new EventEmitter();\n\n  onChange = (value) => {\n    this._onChangeNoEmit(value);\n    this._valueChanges.next(value);\n  };\n\n  onTouched = () => {};\n\n  constructor(\n      private _elementRef: ElementRef, private _viewContainerRef: ViewContainerRef, private _renderer: Renderer,\n      private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver) {\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n    this._onChangeNoEmit = (_: any) => {};\n  }\n\n  ngAfterViewChecked() {\n    if (this._windowRef) {\n      const targetPosition = this._positioning.positionElements(\n          this._elementRef.nativeElement, this._windowRef.location.nativeElement, 'bottom-left', false);\n\n      const targetStyle = this._windowRef.location.nativeElement.style;\n      targetStyle.top = `${targetPosition.top}px`;\n      targetStyle.left = `${targetPosition.left}px`;\n    }\n  }\n\n  ngOnDestroy() { this._subscription.unsubscribe(); }\n\n  ngOnInit() {\n    this._subscription =\n        this._valueChanges.do(value => this._userInput = value).let (this.ngbTypeahead).subscribe((results) => {\n          if (!results || results.length === 0) {\n            this._closePopup();\n          } else {\n            this._openPopup();\n            this._windowRef.instance.results = results;\n            this._windowRef.instance.term = this._elementRef.nativeElement.value;\n            if (this.resultFormatter) {\n              this._windowRef.instance.formatter = this.resultFormatter;\n            }\n            if (this.resultTemplate) {\n              this._windowRef.instance.resultTemplate = this.resultTemplate;\n            }\n            this._showHint();\n          }\n        });\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChangeNoEmit = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  writeValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\n\n  /**\n   * @internal\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._closePopup();\n      this._writeInputValue(this._userInput);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  /**\n   * @internal\n   */\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this._windowRef) {\n      return;\n    }\n\n    if (Key[toString(event.which)]) {\n      event.preventDefault();\n\n      switch (event.which) {\n        case Key.ArrowDown:\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          const result = this._windowRef.instance.getActive();\n          this._selectResult(result);\n          break;\n        case Key.Escape:\n          this.dismissPopup();\n          break;\n      }\n    }\n  }\n\n  private _openPopup() {\n    if (!this._windowRef) {\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResult(result));\n    }\n  }\n\n  private _closePopup() {\n    this._popupService.close();\n    this._windowRef = null;\n  }\n\n  private _selectResult(result: any) {\n    this.writeValue(result);\n    this._onChangeNoEmit(result);\n    this.selectItem.emit(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint) {\n      const userInputLowerCase = this._userInput.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._userInput.length).toLowerCase()) {\n        this._writeInputValue(this._userInput + formattedVal.substr(this._userInput.length));\n        this._renderer.invokeElementMethod(\n            this._elementRef.nativeElement, 'setSelectionRange', [this._userInput.length, formattedVal.length]);\n      } else {\n        this.writeValue(this._windowRef.instance.getActive());\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', value);\n  }\n}\n\nexport const NGB_TYPEAHEAD_DIRECTIVES = [NgbTypeahead];\n"],"sourceRoot":"/source/"}