{"version":3,"sources":["modal/modal-window.ts"],"names":[],"mappings":"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","file":"modal/modal-window.js","sourcesContent":["import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  ElementRef,\n  Renderer,\n  OnInit,\n  AfterViewInit,\n  OnDestroy\n} from '@angular/core';\n\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    'class': 'modal fade in',\n    'role': 'dialog',\n    'tabindex': '-1',\n    'style': 'display: block;',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick()'\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '')\" role=\"document\">\n        <div class=\"modal-content\" (click)=\"stopPropagation($event)\"><ng-content></ng-content></div>\n    </div>\n    `\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @Input() backdrop: boolean | string = true;\n  @Input() keyboard = true;\n  @Input() size: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(private _elRef: ElementRef, private _renderer: Renderer) {}\n\n  backdropClick(): void {\n    if (this.backdrop === true) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  stopPropagation($event: MouseEvent): void { $event.stopPropagation(); }\n\n  ngOnInit() {\n    this._elWithFocus = document.activeElement;\n    this._renderer.setElementClass(document.body, 'modal-open', true);\n  }\n\n  ngAfterViewInit() {\n    if (!this._isNodeChildOfAnother(this._elRef.nativeElement, document.activeElement)) {\n      this._renderer.invokeElementMethod(this._elRef.nativeElement, 'focus', []);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._elWithFocus && this._isNodeChildOfAnother(document.body, this._elWithFocus)) {\n      this._renderer.invokeElementMethod(this._elWithFocus, 'focus', []);\n    } else {\n      this._renderer.invokeElementMethod(document.body, 'focus', []);\n    }\n\n    this._elWithFocus = null;\n    this._renderer.setElementClass(document.body, 'modal-open', false);\n  }\n\n  private _isNodeChildOfAnother(parentNode, potentialChildNode) { return parentNode.contains(potentialChildNode); }\n}\n"],"sourceRoot":"/source/"}