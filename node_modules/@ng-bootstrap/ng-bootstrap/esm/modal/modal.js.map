{"version":3,"sources":["modal/modal.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,UAAU,EAAc,MAAM,eAAe;OAE9C,EAAC,aAAa,EAAC,MAAM,eAAe;AAwB3C;;;GAGG;AAEH;IACE,YAAoB,WAA0B;QAA1B,gBAAW,GAAX,WAAW,CAAe;IAAG,CAAC;IAElD;;OAEG;IACH,IAAI,CAAC,OAAkC,EAAE,OAAO,GAAoB,EAAE;QACpE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;AACH,CAAC;AAVD;IAAC,UAAU,EAAE;;YAAA;AAUZ","file":"modal/modal.js","sourcesContent":["import {Injectable, TemplateRef} from '@angular/core';\n\nimport {NgbModalStack} from './modal-stack';\nimport {NgbModalRef} from './modal-ref';\n\n/**\n * Represent options available when opening new modal windows.\n */\nexport interface NgbModalOptions {\n  /**\n   * Whether a backdrop element should be created for a given modal (true by default).\n   * Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Whether to close the modal when escape key is pressed (true by default).\n   */\n  keyboard?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg';\n}\n\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\n@Injectable()\nexport class NgbModal {\n  constructor(private _modalStack: NgbModalStack) {}\n\n  /**\n   * Opens a new modal window with the specified content and using supplied options.\n   */\n  open(content: string | TemplateRef<any>, options: NgbModalOptions = {}): NgbModalRef {\n    return this._modalStack.open(content, options);\n  }\n}\n"],"sourceRoot":"/source/"}