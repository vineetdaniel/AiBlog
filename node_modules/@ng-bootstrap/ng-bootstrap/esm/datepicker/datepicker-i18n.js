var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Injectable } from '@angular/core';
const WEEKDAYS = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];
const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
export let NgbDatepickerI18n = class NgbDatepickerI18n {
};
NgbDatepickerI18n = __decorate([
    Injectable(), 
    __metadata('design:paramtypes', [])
], NgbDatepickerI18n);
export let NgbDatepickerI18nDefault = class NgbDatepickerI18nDefault extends NgbDatepickerI18n {
    getWeekdayName(weekday) { return WEEKDAYS[weekday]; }
    getMonthName(month) { return MONTHS[month]; }
};
NgbDatepickerI18nDefault = __decorate([
    Injectable(), 
    __metadata('design:paramtypes', [])
], NgbDatepickerI18nDefault);

//# sourceMappingURL=datepicker-i18n.js.map
